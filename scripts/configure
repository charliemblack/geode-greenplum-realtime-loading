#!/bin/bash

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/.." >&-
APP_HOME="`pwd -P`"
cd "$SAVED" >&-


REGION_OPTIONS="--name=Region1"
REGION_OPTIONS="${REGION_OPTIONS} --async-event-queue-id=Table1"
REGION_OPTIONS="${REGION_OPTIONS} --type=PARTITION_REDUNDANT"
REGION_OPTIONS="${REGION_OPTIONS} --redundant-copies=1"
REGION_OPTIONS="${REGION_OPTIONS} --enable-concurrency-checks=false"

LISTENER_PARAMS=" --listener-param=connectionPoolProperties#${APP_HOME}/etc/jdbc.properties"
LISTENER_PARAMS="${LISTENER_PARAMS},pipeFileLocation#${APP_HOME}/data/pipefile"
LISTENER_PARAMS="${LISTENER_PARAMS},pipeName#pipName"
LISTENER_PARAMS="${LISTENER_PARAMS},pipeFileLock#${APP_HOME}/data/fileLock.lock"
LISTENER_PARAMS="${LISTENER_PARAMS},externalTableName#theExtTable"
LISTENER_PARAMS="${LISTENER_PARAMS},tableName#theTableName"
LISTENER_PARAMS="${LISTENER_PARAMS},pdxFields#field1:field2:fieldn"
LISTENER_PARAMS="${LISTENER_PARAMS},TEST_MODE#true"


QUEUE_OPTIONS="--id=Table1"
QUEUE_OPTIONS="${QUEUE_OPTIONS} --parallel=true"
QUEUE_OPTIONS="${QUEUE_OPTIONS} --enable-batch-conflation=false"
QUEUE_OPTIONS="${QUEUE_OPTIONS} --batch-size=100000"
QUEUE_OPTIONS="${QUEUE_OPTIONS} --batch-time-interval=300000"
QUEUE_OPTIONS="${QUEUE_OPTIONS} --persistent=false"
QUEUE_OPTIONS="${QUEUE_OPTIONS} --disk-synchronous=false"
QUEUE_OPTIONS="${QUEUE_OPTIONS} --forward-expiration-destroy=false"
QUEUE_OPTIONS="${QUEUE_OPTIONS} --max-queue-memory=100"
QUEUE_OPTIONS="${QUEUE_OPTIONS} --dispatcher-threads=5"
QUEUE_OPTIONS="${QUEUE_OPTIONS} --order-policy=KEY"
QUEUE_OPTIONS="${QUEUE_OPTIONS} ${LISTENER_PARAMS}"
QUEUE_OPTIONS="${QUEUE_OPTIONS} --listener=demo.geode.greenplum.GreenplumMicroBatcher"



gfsh << EOF

connect --locator=localhost[10334]

create async-event-queue ${QUEUE_OPTIONS}

create region ${REGION_OPTIONS}

EOF
